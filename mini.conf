## ----------------------------------------------------------------------------
#  tiarra.conf
# -----------------------------------------------------------------------------
# 初期状態で登録されているモジュールは以下のもの.
# ( + のは有効, - のは無効にしてあります)
# + System::WebClient
# + CTCP::Version
# + Client::Conservative
# + Client::GetVersion
# - Log::Channel
# - Log::Recent
# + System::Error
# - System::NotifyIcon::Win32
# + System::Pong
# + System::PrivTranslator
# + System::Reload
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# generalブロック
#
# tiarra.conf自身の文字コードやユーザー情報などを指定するブロックです。
# -----------------------------------------------------------------------------
general {
  conf-encoding: sjis

  # ユーザー情報。省略不能です。
  nick: tiarra
  user: tiarra
  name: Tiarra the "Aeon"

  # Tiarraが開くポート。ここに指定したポートへクライアントに接続させる。
  # 省略されたらポートを開かない。
  tiarra-port: 6667

  # Tiarraにクライアントが接続する際に要求するパスワードをcryptした文字列。
  # 空の文字列が指定されたり省略された場合はパスワードを要求しない。
  # crypt は ./tiarra --make-password で行えます。
  # 若しくは添付の make-password.bat をダブルクリック。
  tiarra-password: sqPX2TZEectPk
  # password=tirpass8

  stdout-encoding: sjis
  notice-error-messages: 1

  messages {
    # Tiarra が使用する、いくつかのメッセージを指定する。
    quit {
      # ネットワーク設定が変更され、再接続する場合の切断メッセージ
      netconf-changed-reconnect: Server Configuration changed; reconnect
      # ネットワーク設定が変更され、切断する場合の切断メッセージ
      netconf-changed-disconnect: Server Configuration changed; disconnect
    }
  }
}

# -----------------------------------------------------------------------------
# networksブロック
#
# Tiarraから接続するIRCネットワークの名称です。
# 一つも定義しなかった場合やこのブロックを省略した場合は、
# "main"というネットワークが一つだけ指定されたものと見做します。
# -----------------------------------------------------------------------------
networks {
  multi-server-mode: 0

  # 接続するIRCネットワークに名前を付けます。この名前は後で使用します。
  # 複数のネットワークに接続したい場合は多重定義して下さい。
  name: ircnet
  name: irc2ch

  channel-network-separator: @

  fixed-channels {
    # Tiarra がクライアント接続時にチャンネル情報を送る順番を指定する。
    # マッチしなかったチャンネルについては最後にまとめて
    # (順番がごちゃごちゃになって)送られてきます。
    channel: #てすとちゃんねる@ircnet
    channel: #てすと@localserver
    channel: *@localserver
    channel: *@localserver:*.jp
  }
}

# -----------------------------------------------------------------------------
# 各ネットワークの設定
#
# networksブロックで定義した全てのネットワークについて、
# そのアドレス、ポート、(必要なら)パスワードを定義します。
# -----------------------------------------------------------------------------
ircnet {
  # サーバーのホストとポート。省略不可。
  host: irc.nara.wide.ad.jp
  port: 6667

  #user: hoge
  #name: hoge

  # このサーバーの要求するパスワード。省略可能。
  #password: hoge
}

irc2ch {
  host: irc.2ch.net
  port: 6667
}

# -----------------------------------------------------------------------------
# 必須の設定は以上です。以下はモジュール(プラグイン)の設定です。
# ここにある以外にもいっぱいあるので,
# 
# -----------------------------------------------------------------------------

+ System::WebClient {
  # ブラウザ上でログを見たり発言したりできます.

  # WebClient を起動させる場所の指定.
  bind-addr: 127.0.0.1
  bind-port: 8668
  path: /irc/
  css:  /irc/style/style.css

  # 利用する接続設定の一覧.
  allow: private

  # 許可する接続の設定.
  allow-private {
    # 接続元IPアドレスの制限.
    # (ReverseProxyする時はextract-forwarded-for併用のこと.)
    host: 127.0.0.1
    # 認証設定.
    auth: :basic ircweb ircpass
    # 公開するチャンネルの指定.
    mask: #*@*
    mask: *@*
  }

  # 保存する最大行数.
  max-lines: 100
}

# +または-で始まる行はモジュール設定行と見做されます。
# +で記述されたモジュールが使用され、-で記述されたモジュールは使用されません。
# +や-の後の空白は幾つあっても無視されます。

#   メッセージが各モジュールを通過する順番は、このconfファイルで記述された
# 順番の通りになります。ログを取るモジュールなどはconfでも後の方に
# 記述した方が良いということになります。

+ CTCP::Version {
  # CTCP VERSIONに応答する。

  # 連続したCTCPリクエストに対する応答の間隔。単位は秒。
  # 例えば3秒に設定した場合、一度応答してから3秒間は
  # CTCPに一切応答しなくなる。デフォルトは3。
  #
  # なお、CTCP受信時刻の記録は、全てのCTCPモジュールで共有される。
  # 例えばCTCP VERSIONを送った直後にCTCP CLIENTINFOを送ったとしても、
  # CTCP::ClientInfoのintervalで設定された時間を過ぎていなければ
  # 後者は応答しない。
  interval: 3
}

+ Client::Conservative {
  # サーバが送信するような IRC メッセージを作成するようにする

  # サーバが実際に送信しているようなメッセージにあわせるようにします。
  # 多くのクライアントの設計ミスを回避でき(ると思われ)ます。
}

+ Client::GetVersion {
  # クライアントに CTCP Version を発行してバージョン情報を得る

  # オプションはいまのところありません。
  # (開発者向け情報: 取得した情報は remark の client-version に設定され、
  #                  Client::Guess から使用されます。)
}

- Log::Channel {
  # チャンネルやprivのログを取るモジュール。
  # 詳しい設定は sample.conf を参照.

  # 保存場所.
  # 相対パスで書いた場合はtiarraさんを実行した場所からの相対位置.
  # (通常はこの設定ファイルからの相対位置)
  directory: log

  channel: priv       priv
  channel: #(channel) *
  #channel: others     *
}

- Log::Recent {
  # クライアントを接続した時に、保存しておいた最近のメッセージを送る。
  # 設定は sample.conf を参照.
}

+ System::Error {
  # サーバーからのERRORメッセージをNOTICEに埋め込む

  # これをoffにするとクライアントにERRORメッセージがそのまま送られます。
  # クライアントとの間ではERRORメッセージは主に切断警告に使われており、
  # そのまま流してしまうとクライアントが混乱する可能性があります。
  #   設定項目はありません。

  # このモジュールを回避してERRORメッセージをクライアントに送りたい場合は、
  # remarkのsend-error-as-is-to-clientを指定してください。
}

- System::NotifyIcon::Win32 {
  # タスクトレイにアイコンを表示する。
  # 設定は sample.conf を参照.
}

+ System::Pong {
  # サーバーからのPINGメッセージに対し、自動的にPONGを返す。

  # これをoffにするとクライアントが自らPINGに応答せざるを得なくなりますが、
  # クライアントからのPONGメッセージはデフォルトのサーバーへ送られるので
  # デフォルト以外のサーバーからはPing Timeoutで落とされるなど
  # 全く良い事がありません。
  #   設定項目はありません。
}

+ System::PrivTranslator {
  # クライアントからの個人的なprivが相手に届かなくなる現象を回避する。

  # このモジュールは個人宛てのprivmsgの送信者のnickにネットワーク名を付加します。
  # また、最後に声をかけられてから5分以内の nick 変更をクライアントに伝えます。
  # 設定項目はありませんが、 networks/channel-network-separator を ! や @ 以外に
  # 変更することをおすすめします。
}

+ System::Reload {
  # confファイルやモジュールの更新をリロードするコマンドを追加する。

  # リロードを実行するコマンド名。省略されるとコマンドを追加しません。
  # 例えば"load"を設定すると、"/load"と発言しようとした時にリロードを実行します。
  # この時コマンドはTiarraが握り潰すので、IRCプロトコル上で定義された
  # コマンド名を設定すべきではありません。
  command: load

  # command と同じですが、サーバにもブロードキャストします。
  #broadcast-command: load-all

  # confファイルをリロードしたときに通知します。
  # モジュールの設定が変更されていた場合は、ここでの設定にかかわらず、
  # モジュールごとに表示されます。1または省略された場合は通知します。
  conf-reloaded-notify: 1
}

# -----------------------------------------------------------------------------
# End of File.
# -----------------------------------------------------------------------------
